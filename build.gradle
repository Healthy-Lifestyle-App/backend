plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.diffplug.spotless' version "6.19.0"
}

group = 'healthy.lifestyle.backend'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

jar {
	archivesBaseName = 'backend'
	enabled = false
}

//configurations {
//	all*.exclude group: 'commons-logging', module: 'commons-logging'
//}

configurations {
	configureEach {
		exclude group: 'commons-logging', module: 'commons-logging'
	}
}

dependencies {
	// Rest
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.liquibase:liquibase-core'

	// Kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// Firebase Cloud Messaging
	implementation group: 'com.google.firebase', name: 'firebase-admin', version: '9.2.0'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	// Logging
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7'
	implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.4.8'
	testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.8'

	// Monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.3.1'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.9.2'
	testImplementation "org.testcontainers:testcontainers:1.18.3"
	testImplementation "org.testcontainers:postgresql:1.18.3"
	testImplementation "org.testcontainers:junit-jupiter:1.18.3"

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Mapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testCompileOnly 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

	// Swagger
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.5.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(Test).configureEach {
	if (!project.hasProperty("createReports")) {
		reports.html.required = false
		reports.junitXml.required = false
	}
}

test {
	testLogging {
		events "passed", "skipped", "failed"
	}
}

spotless {
	format 'misc', {
		target '*.gradle', '*.md', '.gitignore'

		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
	java {
		palantirJavaFormat("2.38.0")
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
		formatAnnotations()
	}
}
