name: Release Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  check-versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: set-current-version
        id: set-current-version
        run: echo "::set-output name=current-version::$(cat VERSION)"
      - name: set-release-version
        id: set-release-version
        run: echo "::set-output name=release-version::$(cat RELEASE_VERSION)"
        
  build-and-push:
    needs: check-versions
    runs-on: ubuntu-latest
    if: ${{ needs.check-versions.outputs.current-version == needs.check-versions.outputs.release-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          repository: healthylifestyle/assistant
          tags: latest, ${{ needs.check-versions.outputs.current-version }}