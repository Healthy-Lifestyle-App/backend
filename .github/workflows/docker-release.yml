name: Release Pipeline

on:
  push:
    branches: [ "v*" ]

jobs:
  checkversions:
    runs-on: ubuntu-latest

    outputs:
      current: ${{ steps.set.outputs.current }}
      target: ${{ steps.set.outputs.target }}
      test: ${{ steps.set.outputs.test }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set version
        id: set
        run: |          
          echo "current=$(grep '^current=' version | awk -F= '{print $2}')" >> $GITHUB_OUTPUT
          echo "target=$(grep '^target=' version | awk -F= '{print $2}')" >> $GITHUB_OUTPUT
          echo "test=$(grep '^test=' version | awk -F= '{print $2}')" >> $GITHUB_OUTPUT

      - name: Display version
        run: |
          echo ">> >> >> CURRENT VERSION: ${{ steps.set.outputs.current }}"
          echo ">> >> >> TARGET VERSION: ${{ steps.set.outputs.target }}"
          echo ">> >> >> TEST FLAG: ${{ steps.set.outputs.test }}"

  build-and-push:
    needs: checkversions
    runs-on: ubuntu-latest
    if: ${{ needs.checkversions.outputs.current == needs.checkversions.outputs.target }}

    steps:
      - name: Display version
        run: |
          echo ">> >> >> CURRENT VERSION: ${{ steps.set.outputs.current }}"
          echo ">> >> >> TARGET VERSION: ${{ steps.set.outputs.target }}"
          echo ">> >> >> TEST FLAG: ${{ steps.set.outputs.test }}"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Info
        run: pwd && ls -l

      - name: Create log directories
        run: |
          sudo mkdir /vartest/
          sudo mkdir /vartest/log/
          sudo mkdir /vartest/log/test/
          sudo touch /vartest/log/test/logback.log
          sudo chmod u+rw,g+rw,o+rw /vartest/log/test/logback.log
          ls -l /vartest/log/test/

      - name: Build jar
        run: ./gradlew clean build --info

      - name: Build Docker image
        if: ${{ needs.checkversions.outputs.test == 0 }}
        run: docker build -t healthylifestyle/backend:${{ needs.checkversions.outputs.current }} -t healthylifestyle/backend:latest .

      - name: Push image to Docker Hub
        if: ${{ needs.checkversions.outputs.test == 0 }}
        run: |
          docker push healthylifestyle/backend:${{ needs.checkversions.outputs.current }}
          docker push healthylifestyle/backend:latest

      - name: Build Docker test image
        if: ${{ needs.checkversions.outputs.test == 1 }}
        run: docker build -t healthylifestyle/backend:${{ needs.checkversions.outputs.current }}-test -t healthylifestyle/backend:latest-test .

      - name: Push test image to Docker Hub
        if: ${{ needs.checkversions.outputs.test == 1 }}
        run: | 
          docker push healthylifestyle/backend:${{ needs.checkversions.outputs.current }}-test
          docker push healthylifestyle/backend:latest-test