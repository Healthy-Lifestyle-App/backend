name: Release Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  checkversions:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.set.outputs.ver }}
      rel: ${{ steps.set.outputs.rel }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set current version
        id: setcurrentversion
        run: echo "::set-output name=current::$(cat VERSION)"
      - name: Set Release Version
        id: setreleaseversion
        run: echo "::set-output name=release::$(cat RELEASE_VERSION)"
      - name: Debug Cat command
        run: |
          cat VERSION
          cat RELEASE_VERSION
      - name: Debug versions
        run: |
          echo ">>>>> Current version is ${{ steps.setcurrentversion.outputs.current }}"
          echo ">>>>> Release version is ${{ steps.setreleaseversion.outputs.release }}"
      - name: Set
        id: set
        run: |
          echo "ver=$(cat VERSION)" >> $GITHUB_OUTPUT
          echo "rel=$(cat RELEASE_VERSION)" >> $GITHUB_OUTPUT
      - name: Get
        run: |
          echo "ver is ${{ steps.set.outputs.ver }}"
          echo "rel is ${{ steps.set.outputs.rel }}"

  build-and-push:
    needs: checkversions
    runs-on: ubuntu-latest
    if: ${{ needs.check-versions.steps.setcurrentversion.outputs.current == needs.check-versions.steps.setreleaseversion.outputs.release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'corretto'
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Build jar
#        run: ./gradlew build
      - name: Debug versions
        run: |
          echo ">>>>> Current version 1 ${{ needs.checkversions.outputs.ver }}"
          echo ">>>>> Current version 2 ${{ needs.checkversions.steps.set.outputs.ver }}"
#      - name: Build Docker image
#        run: docker build -t healthylifestyle/assistant:${{ needs.check-versions.outputs.current-version }} -t healthylifestyle/assistant:latest .
#      - name: Push image to Docker Hub
#        run: |
#          docker push healthylifestyle/assistant:${{ needs.check-versions.outputs.current-version }}
#          docker push healthylifestyle/assistant:latest